<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ceshi.dao.Go_pictureMapper">
  <resultMap id="BaseResultMap" type="com.ceshi.bean.Go_picture">
    <id column="pi_id" jdbcType="INTEGER" property="piId" />
    <result column="pi_goodid" jdbcType="INTEGER" property="piGoodid" />
  </resultMap>
  
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.ceshi.bean.Go_pictureWithBLOBs">
    <result column="pi_hang" jdbcType="LONGVARBINARY" property="piHang" />
    <result column="pi_su" jdbcType="LONGVARBINARY" property="piSu" />
    <result column="pi_sl" jdbcType="LONGVARBINARY" property="piSl" />
    <result column="pi_lb" jdbcType="LONGVARBINARY" property="piLb" />
    <result column="pi_detail" jdbcType="LONGVARBINARY" property="piDetail" />
  </resultMap>
  
  
  
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    pi_id, pi_goodid
  </sql>
  
  <sql id="Blob_Column_List">
    pi_hang, pi_su, pi_sl, pi_lb, pi_detail
  </sql>
  
  <sql id="Blob">
    pi_hang, pi_su, pi_sl, pi_lb, pi_detail
  </sql>
  
  <sql id="Pilb">
   pi_lb
  </sql>
  
  <!-- List<Go_pictureWithBLOBs> selectByGoodIdWithPi_Lb();-->

   <select id="selectByGoodIdWithPi_Lb"  resultMap="ResultMapWithBLOBs">
    select 
      
    <include refid="Base_Column_List" />
     ,
    <include refid="Pilb" />
FROM go_picture WHERE pi_goodid = ANY
( select t.go_id from 
(SELECT go_id  FROM good WHERE go_id = ANY
(SELECT  pt_goodid from go_paytype WHERE pt_name = 3) ORDER BY  go_buysum desc LIMIT 5)
 AS t
)
  </select>
  
  
  <select id="selectByExampleWithBLOBs" parameterType="com.ceshi.bean.Go_pictureExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from go_picture
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.ceshi.bean.Go_pictureExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from go_picture
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from go_picture
    where pi_id = #{piId,jdbcType=INTEGER}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from go_picture
    where pi_id = #{piId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ceshi.bean.Go_pictureExample">
    delete from go_picture
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ceshi.bean.Go_pictureWithBLOBs">
    insert into go_picture (pi_id, pi_goodid, pi_hang, 
      pi_su, pi_sl, pi_lb, 
      pi_detail)
    values (#{piId,jdbcType=INTEGER}, #{piGoodid,jdbcType=INTEGER}, #{piHang,jdbcType=LONGVARBINARY}, 
      #{piSu,jdbcType=LONGVARBINARY}, #{piSl,jdbcType=LONGVARBINARY}, #{piLb,jdbcType=LONGVARBINARY}, 
      #{piDetail,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="com.ceshi.bean.Go_pictureWithBLOBs">
    insert into go_picture
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="piId != null">
        pi_id,
      </if>
      <if test="piGoodid != null">
        pi_goodid,
      </if>
      <if test="piHang != null">
        pi_hang,
      </if>
      <if test="piSu != null">
        pi_su,
      </if>
      <if test="piSl != null">
        pi_sl,
      </if>
      <if test="piLb != null">
        pi_lb,
      </if>
      <if test="piDetail != null">
        pi_detail,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="piId != null">
        #{piId,jdbcType=INTEGER},
      </if>
      <if test="piGoodid != null">
        #{piGoodid,jdbcType=INTEGER},
      </if>
      <if test="piHang != null">
        #{piHang,jdbcType=LONGVARBINARY},
      </if>
      <if test="piSu != null">
        #{piSu,jdbcType=LONGVARBINARY},
      </if>
      <if test="piSl != null">
        #{piSl,jdbcType=LONGVARBINARY},
      </if>
      <if test="piLb != null">
        #{piLb,jdbcType=LONGVARBINARY},
      </if>
      <if test="piDetail != null">
        #{piDetail,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ceshi.bean.Go_pictureExample" resultType="java.lang.Long">
    select count(*) from go_picture
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update go_picture
    <set>
      <if test="record.piId != null">
        pi_id = #{record.piId,jdbcType=INTEGER},
      </if>
      <if test="record.piGoodid != null">
        pi_goodid = #{record.piGoodid,jdbcType=INTEGER},
      </if>
      <if test="record.piHang != null">
        pi_hang = #{record.piHang,jdbcType=LONGVARBINARY},
      </if>
      <if test="record.piSu != null">
        pi_su = #{record.piSu,jdbcType=LONGVARBINARY},
      </if>
      <if test="record.piSl != null">
        pi_sl = #{record.piSl,jdbcType=LONGVARBINARY},
      </if>
      <if test="record.piLb != null">
        pi_lb = #{record.piLb,jdbcType=LONGVARBINARY},
      </if>
      <if test="record.piDetail != null">
        pi_detail = #{record.piDetail,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update go_picture
    set pi_id = #{record.piId,jdbcType=INTEGER},
      pi_goodid = #{record.piGoodid,jdbcType=INTEGER},
      pi_hang = #{record.piHang,jdbcType=LONGVARBINARY},
      pi_su = #{record.piSu,jdbcType=LONGVARBINARY},
      pi_sl = #{record.piSl,jdbcType=LONGVARBINARY},
      pi_lb = #{record.piLb,jdbcType=LONGVARBINARY},
      pi_detail = #{record.piDetail,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update go_picture
    set pi_id = #{record.piId,jdbcType=INTEGER},
      pi_goodid = #{record.piGoodid,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ceshi.bean.Go_pictureWithBLOBs">
    update go_picture
    <set>
      <if test="piGoodid != null">
        pi_goodid = #{piGoodid,jdbcType=INTEGER},
      </if>
      <if test="piHang != null">
        pi_hang = #{piHang,jdbcType=LONGVARBINARY},
      </if>
      <if test="piSu != null">
        pi_su = #{piSu,jdbcType=LONGVARBINARY},
      </if>
      <if test="piSl != null">
        pi_sl = #{piSl,jdbcType=LONGVARBINARY},
      </if>
      <if test="piLb != null">
        pi_lb = #{piLb,jdbcType=LONGVARBINARY},
      </if>
      <if test="piDetail != null">
        pi_detail = #{piDetail,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where pi_id = #{piId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.ceshi.bean.Go_pictureWithBLOBs">
    update go_picture
    set pi_goodid = #{piGoodid,jdbcType=INTEGER},
      pi_hang = #{piHang,jdbcType=LONGVARBINARY},
      pi_su = #{piSu,jdbcType=LONGVARBINARY},
      pi_sl = #{piSl,jdbcType=LONGVARBINARY},
      pi_lb = #{piLb,jdbcType=LONGVARBINARY},
      pi_detail = #{piDetail,jdbcType=LONGVARBINARY}
    where pi_id = #{piId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ceshi.bean.Go_picture">
    update go_picture
    set pi_goodid = #{piGoodid,jdbcType=INTEGER}
    where pi_id = #{piId,jdbcType=INTEGER}
  </update>
</mapper>